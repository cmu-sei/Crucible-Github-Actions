name: Build & Publish Image

on:
  workflow_call:
    inputs:
      imageName:
        description: "Base name of the image (e.g., myorg/myimage)"
        type: string
        required: true
      tagName:
        description: "Optional explicit tag to use (overrides auto-detection)"
        type: string
        required: false
      dockerfilePath:
        description: "Path to your project's Dockerfile"
        required: false
        default: ./Dockerfile
        type: string
      additionalTarget:
        description: "An additional Docker build target stage to build and push"
        required: false
        type: string
      push:
        description: "Use to override default push behavior. If false, will not push, even from a release."
        type: string
        required: false

    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine Push Condition
        id: push_condition
        # Push unless the calling workflow was triggered by a pull_request, or the push input was set
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Workflow triggered by pull_request. Will not push."
            PUSH=false
          else
            echo "Not a pull request"
            if [ -n "$INPUT_PUSH" ]; then
              echo "Push override input detected: '$INPUT_PUSH'. Setting push to: $INPUT_PUSH"
              PUSH=$INPUT_PUSH
            else
              echo "No push override. Will push by default."
              PUSH=true
            fi
          fi

          echo "Final push decision: $PUSH"
          echo "push=$PUSH" >> $GITHUB_OUTPUT
        env:
          INPUT_PUSH: ${{ inputs.push }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.push_condition.outputs.push == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Meta for primary image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.imageName }}
          tags: |
            type=raw,value=${{ inputs.tagName }},enable=${{ inputs.tagName != '' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch,enable=${{ inputs.tagName == '' && !startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=false

      # Generate the tags for the additional target based on the primary tags
      - name: Generate Additional Target Tags
        if: inputs.additionalTarget != ''
        id: target_tags
        run: |
          TARGET_TAGS=""
          readarray -t TAG_ARRAY <<< "${{ steps.meta.outputs.tags }}"
          for full_tag in "${TAG_ARRAY[@]}"; do
            # Extract just the tag part after the colon
            tag_part="${full_tag##*:}"
            # Get the base image name
            image_name="${full_tag%%:*}"

            # Skip if tag_part is empty
            if [[ -z "$tag_part" ]]; then
              echo "Skipping tag with empty tag_part for: $full_tag"
              continue
            fi

            if [[ ! -z "$TARGET_TAGS" ]]; then
              TARGET_TAGS="${TARGET_TAGS},"
            fi
            TARGET_TAGS="${TARGET_TAGS}${new_tag}"
          done
          echo "tags=${TARGET_TAGS}" >> $GITHUB_OUTPUT
          echo "Generated additional target tags: ${TARGET_TAGS}"

      - name: Build and push default stage
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfilePath }}
          push: ${{ steps.push_condition.outputs.push }}
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push additional target
        if: inputs.additionalTarget != ''
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfilePath }}
          target: ${{ inputs.additionalTarget }}
          push: ${{ steps.push_condition.outputs.push }}
          pull: true
          tags: ${{ steps.target_tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
